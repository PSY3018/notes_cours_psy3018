Traceback (most recent call last):
  File "/home/pbellec/env/psy3018/lib/python3.8/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/home/pbellec/env/psy3018/lib/python3.8/site-packages/nbclient/client.py", line 1112, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/home/pbellec/env/psy3018/lib/python3.8/site-packages/nbclient/util.py", line 74, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/home/pbellec/env/psy3018/lib/python3.8/site-packages/nbclient/util.py", line 53, in just_run
    return loop.run_until_complete(coro)
  File "/usr/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/home/pbellec/env/psy3018/lib/python3.8/site-packages/nbclient/client.py", line 553, in async_execute
    await self.async_execute_cell(
  File "/home/pbellec/env/psy3018/lib/python3.8/site-packages/nbclient/client.py", line 857, in async_execute_cell
    self._check_raise_for_error(cell, exec_reply)
  File "/home/pbellec/env/psy3018/lib/python3.8/site-packages/nbclient/client.py", line 760, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import numpy as np
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

def sample_data(d, n_samp=1000):
    samp1 = np.random.normal(loc=0, scale=1, size=n_samp)
    samp2 = np.random.normal(loc=d, scale=1, size=n_samp)
    return samp1, samp2

# On g√©n√®re une s√©rie de nombres al√©atoires
# avec diff√©rentes tailles d'effet
rs = np.random.RandomState(0)
list_d = [0, 0.3, 1, 2]
n_samp = 10000
df1 = pd.DataFrame()
df2 = pd.DataFrame()
for d in list_d:
    samp1, samp2 = sample_data(d, n_samp=n_samp)
    df1[f'{d}'] = samp1
    df2[f'{d}'] = samp2

# On stocke toutes les valeurs avec les param√®tres correspondants
# dans un pandas dataframe
df1 = df1.melt(var_name='d')
df1['group'] = 0
df2 = df2.melt(var_name='d')
df2['group'] = 1
df = df1.append(df2)

# On visualise les distributions
import seaborn as sns

sns.set_theme(style='darkgrid')
fig = sns.displot(
    df,     
    x='value',
    hue='group',
    kind='kde',
    fill=True,
)
fig.fig.set_dpi(300)

from myst_nb import glue
glue("effect-size-fig", fig.fig, display=False)
------------------

[0;31m--------------------------------------------------------------------------[0m
[0;31mValueError[0m                               Traceback (most recent call last)
[0;32m<ipython-input-1-1d82f08de40c>[0m in [0;36m<module>[0;34m[0m
[1;32m     33[0m [0;34m[0m[0m
[1;32m     34[0m [0msns[0m[0;34m.[0m[0mset_theme[0m[0;34m([0m[0mstyle[0m[0;34m=[0m[0;34m'darkgrid'[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 35[0;31m fig = sns.displot(
[0m[1;32m     36[0m     [0mdf[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[1;32m     37[0m     [0mx[0m[0;34m=[0m[0;34m'value'[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/env/psy3018/lib/python3.8/site-packages/seaborn/distributions.py[0m in [0;36mdisplot[0;34m(data, x, y, hue, row, col, weights, kind, rug, rug_kws, log_scale, legend, palette, hue_order, hue_norm, color, col_wrap, row_order, col_order, height, aspect, facet_kws, **kwargs)[0m
[1;32m   2297[0m [0;34m[0m[0m
[1;32m   2298[0m             [0m_assign_default_kwargs[0m[0;34m([0m[0mkde_kws[0m[0;34m,[0m [0mp[0m[0;34m.[0m[0mplot_univariate_density[0m[0;34m,[0m [0mkdeplot[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 2299[0;31m             [0mp[0m[0;34m.[0m[0mplot_univariate_density[0m[0;34m([0m[0;34m**[0m[0mkde_kws[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   2300[0m [0;34m[0m[0m
[1;32m   2301[0m         [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/env/psy3018/lib/python3.8/site-packages/seaborn/distributions.py[0m in [0;36mplot_univariate_density[0;34m(self, multiple, common_norm, common_grid, warn_singular, fill, legend, estimate_kws, **plot_kws)[0m
[1;32m    926[0m [0;34m[0m[0m
[1;32m    927[0m         [0;31m# Do the computation[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 928[0;31m         densities = self._compute_univariate_density(
[0m[1;32m    929[0m             [0mself[0m[0;34m.[0m[0mdata_variable[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[1;32m    930[0m             [0mcommon_norm[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/env/psy3018/lib/python3.8/site-packages/seaborn/distributions.py[0m in [0;36m_compute_univariate_density[0;34m(self, data_variable, common_norm, common_grid, estimate_kws, log_scale, warn_singular)[0m
[1;32m    301[0m         [0mdensities[0m [0;34m=[0m [0;34m{[0m[0;34m}[0m[0;34m[0m[0;34m[0m[0m
[1;32m    302[0m [0;34m[0m[0m
[0;32m--> 303[0;31m         [0;32mfor[0m [0msub_vars[0m[0;34m,[0m [0msub_data[0m [0;32min[0m [0mself[0m[0;34m.[0m[0miter_data[0m[0;34m([0m[0;34m"hue"[0m[0;34m,[0m [0mfrom_comp_data[0m[0;34m=[0m[0;32mTrue[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    304[0m [0;34m[0m[0m
[1;32m    305[0m             [0;31m# Extract the data points from this sub set and remove nulls[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/env/psy3018/lib/python3.8/site-packages/seaborn/_core.py[0m in [0;36miter_data[0;34m(self, grouping_vars, reverse, from_comp_data)[0m
[1;32m    981[0m [0;34m[0m[0m
[1;32m    982[0m         [0;32mif[0m [0mfrom_comp_data[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 983[0;31m             [0mdata[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0mcomp_data[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    984[0m         [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    985[0m             [0mdata[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0mplot_data[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/env/psy3018/lib/python3.8/site-packages/seaborn/_core.py[0m in [0;36mcomp_data[0;34m(self)[0m
[1;32m   1055[0m                     [0morig[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0mplot_data[0m[0;34m[[0m[0mvar[0m[0;34m][0m[0;34m.[0m[0mdropna[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1056[0m                 [0mcomp_col[0m [0;34m=[0m [0mpd[0m[0;34m.[0m[0mSeries[0m[0;34m([0m[0mindex[0m[0;34m=[0m[0morig[0m[0;34m.[0m[0mindex[0m[0;34m,[0m [0mdtype[0m[0;34m=[0m[0mfloat[0m[0;34m,[0m [0mname[0m[0;34m=[0m[0mvar[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 1057[0;31m                 [0mcomp_col[0m[0;34m.[0m[0mloc[0m[0;34m[[0m[0morig[0m[0;34m.[0m[0mindex[0m[0;34m][0m [0;34m=[0m [0mpd[0m[0;34m.[0m[0mto_numeric[0m[0;34m([0m[0maxis[0m[0;34m.[0m[0mconvert_units[0m[0;34m([0m[0morig[0m[0;34m)[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   1058[0m [0;34m[0m[0m
[1;32m   1059[0m                 [0;32mif[0m [0maxis[0m[0;34m.[0m[0mget_scale[0m[0;34m([0m[0;34m)[0m [0;34m==[0m [0;34m"log"[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/env/psy3018/lib/python3.8/site-packages/pandas/core/indexing.py[0m in [0;36m__setitem__[0;34m(self, key, value)[0m
[1;32m    690[0m [0;34m[0m[0m
[1;32m    691[0m         [0miloc[0m [0;34m=[0m [0mself[0m [0;32mif[0m [0mself[0m[0;34m.[0m[0mname[0m [0;34m==[0m [0;34m"iloc"[0m [0;32melse[0m [0mself[0m[0;34m.[0m[0mobj[0m[0;34m.[0m[0miloc[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 692[0;31m         [0miloc[0m[0;34m.[0m[0m_setitem_with_indexer[0m[0;34m([0m[0mindexer[0m[0;34m,[0m [0mvalue[0m[0;34m,[0m [0mself[0m[0;34m.[0m[0mname[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    693[0m [0;34m[0m[0m
[1;32m    694[0m     [0;32mdef[0m [0m_validate_key[0m[0;34m([0m[0mself[0m[0;34m,[0m [0mkey[0m[0;34m,[0m [0maxis[0m[0;34m:[0m [0mint[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/env/psy3018/lib/python3.8/site-packages/pandas/core/indexing.py[0m in [0;36m_setitem_with_indexer[0;34m(self, indexer, value, name)[0m
[1;32m   1635[0m             [0mself[0m[0;34m.[0m[0m_setitem_with_indexer_split_path[0m[0;34m([0m[0mindexer[0m[0;34m,[0m [0mvalue[0m[0;34m,[0m [0mname[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1636[0m         [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 1637[0;31m             [0mself[0m[0;34m.[0m[0m_setitem_single_block[0m[0;34m([0m[0mindexer[0m[0;34m,[0m [0mvalue[0m[0;34m,[0m [0mname[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   1638[0m [0;34m[0m[0m
[1;32m   1639[0m     [0;32mdef[0m [0m_setitem_with_indexer_split_path[0m[0;34m([0m[0mself[0m[0;34m,[0m [0mindexer[0m[0;34m,[0m [0mvalue[0m[0;34m,[0m [0mname[0m[0;34m:[0m [0mstr[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/env/psy3018/lib/python3.8/site-packages/pandas/core/indexing.py[0m in [0;36m_setitem_single_block[0;34m(self, indexer, value, name)[0m
[1;32m   1849[0m             [0;31m# setting for extensionarrays that store dicts. Need to decide[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1850[0m             [0;31m# if it's worth supporting that.[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 1851[0;31m             [0mvalue[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0m_align_series[0m[0;34m([0m[0mindexer[0m[0;34m,[0m [0mSeries[0m[0;34m([0m[0mvalue[0m[0;34m)[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   1852[0m [0;34m[0m[0m
[1;32m   1853[0m         [0;32melif[0m [0misinstance[0m[0;34m([0m[0mvalue[0m[0;34m,[0m [0mABCDataFrame[0m[0;34m)[0m [0;32mand[0m [0mname[0m [0;34m!=[0m [0;34m"iloc"[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/env/psy3018/lib/python3.8/site-packages/pandas/core/indexing.py[0m in [0;36m_align_series[0;34m(self, indexer, ser, multiindex_indexer)[0m
[1;32m   1985[0m             [0;31m# series, so need to broadcast (see GH5206)[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1986[0m             [0;32mif[0m [0msum_aligners[0m [0;34m==[0m [0mself[0m[0;34m.[0m[0mndim[0m [0;32mand[0m [0mall[0m[0;34m([0m[0mis_sequence[0m[0;34m([0m[0m_[0m[0;34m)[0m [0;32mfor[0m [0m_[0m [0;32min[0m [0mindexer[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 1987[0;31m                 [0mser[0m [0;34m=[0m [0mser[0m[0;34m.[0m[0mreindex[0m[0;34m([0m[0mobj[0m[0;34m.[0m[0maxes[0m[0;34m[[0m[0;36m0[0m[0;34m][0m[0;34m[[0m[0mindexer[0m[0;34m[[0m[0;36m0[0m[0;34m][0m[0;34m][0m[0;34m,[0m [0mcopy[0m[0;34m=[0m[0;32mTrue[0m[0;34m)[0m[0;34m.[0m[0m_values[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   1988[0m [0;34m[0m[0m
[1;32m   1989[0m                 [0;31m# single indexer[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/env/psy3018/lib/python3.8/site-packages/pandas/core/series.py[0m in [0;36mreindex[0;34m(self, index, **kwargs)[0m
[1;32m   4343[0m     )
[1;32m   4344[0m     [0;32mdef[0m [0mreindex[0m[0;34m([0m[0mself[0m[0;34m,[0m [0mindex[0m[0;34m=[0m[0;32mNone[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 4345[0;31m         [0;32mreturn[0m [0msuper[0m[0;34m([0m[0;34m)[0m[0;34m.[0m[0mreindex[0m[0;34m([0m[0mindex[0m[0;34m=[0m[0mindex[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   4346[0m [0;34m[0m[0m
[1;32m   4347[0m     def drop(

[0;32m~/env/psy3018/lib/python3.8/site-packages/pandas/core/generic.py[0m in [0;36mreindex[0;34m(self, *args, **kwargs)[0m
[1;32m   4809[0m [0;34m[0m[0m
[1;32m   4810[0m         [0;31m# perform the reindex on the axes[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 4811[0;31m         return self._reindex_axes(
[0m[1;32m   4812[0m             [0maxes[0m[0;34m,[0m [0mlevel[0m[0;34m,[0m [0mlimit[0m[0;34m,[0m [0mtolerance[0m[0;34m,[0m [0mmethod[0m[0;34m,[0m [0mfill_value[0m[0;34m,[0m [0mcopy[0m[0;34m[0m[0;34m[0m[0m
[1;32m   4813[0m         ).__finalize__(self, method="reindex")

[0;32m~/env/psy3018/lib/python3.8/site-packages/pandas/core/generic.py[0m in [0;36m_reindex_axes[0;34m(self, axes, level, limit, tolerance, method, fill_value, copy)[0m
[1;32m   4830[0m [0;34m[0m[0m
[1;32m   4831[0m             [0maxis[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0m_get_axis_number[0m[0;34m([0m[0ma[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 4832[0;31m             obj = obj._reindex_with_indexers(
[0m[1;32m   4833[0m                 [0;34m{[0m[0maxis[0m[0;34m:[0m [0;34m[[0m[0mnew_index[0m[0;34m,[0m [0mindexer[0m[0;34m][0m[0;34m}[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[1;32m   4834[0m                 [0mfill_value[0m[0;34m=[0m[0mfill_value[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/env/psy3018/lib/python3.8/site-packages/pandas/core/generic.py[0m in [0;36m_reindex_with_indexers[0;34m(self, reindexers, fill_value, copy, allow_dups)[0m
[1;32m   4875[0m [0;34m[0m[0m
[1;32m   4876[0m             [0;31m# TODO: speed up on homogeneous DataFrame objects[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 4877[0;31m             new_data = new_data.reindex_indexer(
[0m[1;32m   4878[0m                 [0mindex[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[1;32m   4879[0m                 [0mindexer[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/env/psy3018/lib/python3.8/site-packages/pandas/core/internals/managers.py[0m in [0;36mreindex_indexer[0;34m(self, new_axis, indexer, axis, fill_value, allow_dups, copy, consolidate, only_slice)[0m
[1;32m   1299[0m         [0;31m# some axes don't allow reindexing with dups[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1300[0m         [0;32mif[0m [0;32mnot[0m [0mallow_dups[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 1301[0;31m             [0mself[0m[0;34m.[0m[0maxes[0m[0;34m[[0m[0maxis[0m[0;34m][0m[0;34m.[0m[0m_can_reindex[0m[0;34m([0m[0mindexer[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   1302[0m [0;34m[0m[0m
[1;32m   1303[0m         [0;32mif[0m [0maxis[0m [0;34m>=[0m [0mself[0m[0;34m.[0m[0mndim[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/env/psy3018/lib/python3.8/site-packages/pandas/core/indexes/base.py[0m in [0;36m_can_reindex[0;34m(self, indexer)[0m
[1;32m   3475[0m         [0;31m# trying to reindex on an axis with duplicates[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[1;32m   3476[0m         [0;32mif[0m [0;32mnot[0m [0mself[0m[0;34m.[0m[0m_index_as_unique[0m [0;32mand[0m [0mlen[0m[0;34m([0m[0mindexer[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 3477[0;31m             [0;32mraise[0m [0mValueError[0m[0;34m([0m[0;34m"cannot reindex from a duplicate axis"[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   3478[0m [0;34m[0m[0m
[1;32m   3479[0m     [0;32mdef[0m [0mreindex[0m[0;34m([0m[0mself[0m[0;34m,[0m [0mtarget[0m[0;34m,[0m [0mmethod[0m[0;34m=[0m[0;32mNone[0m[0;34m,[0m [0mlevel[0m[0;34m=[0m[0;32mNone[0m[0;34m,[0m [0mlimit[0m[0;34m=[0m[0;32mNone[0m[0;34m,[0m [0mtolerance[0m[0;34m=[0m[0;32mNone[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;31mValueError[0m: cannot reindex from a duplicate axis
ValueError: cannot reindex from a duplicate axis

