Traceback (most recent call last):
  File "/home/pbellec/env/psy3018/lib/python3.8/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/home/pbellec/env/psy3018/lib/python3.8/site-packages/nbclient/client.py", line 1112, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/home/pbellec/env/psy3018/lib/python3.8/site-packages/nbclient/util.py", line 74, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/home/pbellec/env/psy3018/lib/python3.8/site-packages/nbclient/util.py", line 53, in just_run
    return loop.run_until_complete(coro)
  File "/usr/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/home/pbellec/env/psy3018/lib/python3.8/site-packages/nbclient/client.py", line 553, in async_execute
    await self.async_execute_cell(
  File "/home/pbellec/env/psy3018/lib/python3.8/site-packages/nbclient/client.py", line 857, in async_execute_cell
    self._check_raise_for_error(cell, exec_reply)
  File "/home/pbellec/env/psy3018/lib/python3.8/site-packages/nbclient/client.py", line 760, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# Importe les librairies n√©cessaires
import matplotlib.pyplot as plt
import numpy as np
from myst_nb import glue
import seaborn as sns

import warnings
warnings.filterwarnings("ignore")

# Importe un jeu de donn√©es fonctionnel (development_fmri)
from nilearn import datasets
dataset = datasets.fetch_development_fmri(n_subjects=1)
func_filename = dataset.func[0]

# Importe un atlas (Harvard-Oxford)
atlas = datasets.fetch_atlas_harvard_oxford('cort-maxprob-thr25-2mm')

# Initialise la figure
fig = plt.figure(figsize=(15, 15))

# G√©n√®re les s√©ries temporelles
masker = NiftiLabelsMasker(atlas.maps,
                           labels=atlas.labels,
                           standardize=True)
masker.fit(func_filename)
signals = masker.transform(func_filename)

# Plot the atlas
from nilearn.plotting import plot_roi
ax = plt.subplot2grid((2, 2), (0, 0), colspan=2)
plot_roi(atlas,
    axes=ax,
    title="Atlas Harvard-Oxford",
    cut_coords=(8, -4, 9),
    colorbar=True,
    cmap='Paired')

# Plot les s√©ries temporelles
import matplotlib.pyplot as plt
ax = plt.subplot2grid((2, 2), (1, 0), colspan=1)
for label_idx in range(3):
    ax.plot(signals[:, label_idx],
            linewidth=2,
            label=atlas.labels[label_idx + 1])  # 0 is background
ax.legend(loc=2)
ax.set_title("Signals for first 3 regions")
plt.show()

# G√©n√®re les s√©ries temporelles apr√®s correction des d√©rives lentes
masker = NiftiLabelsMasker(atlas.maps,
                           detrend=True,
                           labels=atlas.labels,
                           standardize=True)
masker.fit(func_filename)
signals = masker.transform(func_filename)

# Plot les s√©ries temporelles
import matplotlib.pyplot as plt
ax = plt.subplot2grid((2, 2), (1, 1), colspan=1)
for label_idx in range(3):
    ax.plot(signals[:, label_idx],
            linewidth=2,
            label=atlas.labels[label_idx + 1])  # 0 is background
ax.legend(loc=2)
ax.set_title("Signals for first 3 regions")
plt.show()

from myst_nb import glue
glue("detrending-fmri-fig", fig, display=False)
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mValueError[0m                                Traceback (most recent call last)
[0;32m<ipython-input-4-0bcc934ad26d>[0m in [0;36m<module>[0;34m[0m
[1;32m     29[0m [0;32mfrom[0m [0mnilearn[0m[0;34m.[0m[0mplotting[0m [0;32mimport[0m [0mplot_roi[0m[0;34m[0m[0;34m[0m[0m
[1;32m     30[0m [0max[0m [0;34m=[0m [0mplt[0m[0;34m.[0m[0msubplot2grid[0m[0;34m([0m[0;34m([0m[0;36m2[0m[0;34m,[0m [0;36m2[0m[0;34m)[0m[0;34m,[0m [0;34m([0m[0;36m0[0m[0;34m,[0m [0;36m0[0m[0;34m)[0m[0;34m,[0m [0mcolspan[0m[0;34m=[0m[0;36m2[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 31[0;31m plot_roi(atlas,
[0m[1;32m     32[0m     [0maxes[0m[0;34m=[0m[0max[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[1;32m     33[0m     [0mtitle[0m[0;34m=[0m[0;34m"Atlas Harvard-Oxford"[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/env/psy3018/lib/python3.8/site-packages/nilearn/plotting/img_plotting.py[0m in [0;36mplot_roi[0;34m(roi_img, bg_img, cut_coords, output_file, display_mode, figure, axes, title, annotate, draw_cross, black_bg, threshold, alpha, cmap, dim, vmin, vmax, resampling_interpolation, view_type, linewidths, **kwargs)[0m
[1;32m    918[0m                                                     black_bg=black_bg)
[1;32m    919[0m [0;34m[0m[0m
[0;32m--> 920[0;31m     display = _plot_img_with_bg(
[0m[1;32m    921[0m         [0mimg[0m[0;34m=[0m[0mroi_img[0m[0;34m,[0m [0mbg_img[0m[0;34m=[0m[0mbg_img[0m[0;34m,[0m [0mcut_coords[0m[0;34m=[0m[0mcut_coords[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[1;32m    922[0m         [0moutput_file[0m[0;34m=[0m[0moutput_file[0m[0;34m,[0m [0mdisplay_mode[0m[0;34m=[0m[0mdisplay_mode[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/env/psy3018/lib/python3.8/site-packages/nilearn/plotting/img_plotting.py[0m in [0;36m_plot_img_with_bg[0;34m(img, bg_img, cut_coords, output_file, display_mode, colorbar, figure, axes, title, threshold, annotate, draw_cross, black_bg, vmin, vmax, bg_vmin, bg_vmax, interpolation, display_factory, cbar_vmin, cbar_vmax, brain_color, decimals, **kwargs)[0m
[1;32m    171[0m [0;34m[0m[0m
[1;32m    172[0m     [0;32mif[0m [0mimg[0m [0;32mis[0m [0;32mnot[0m [0;32mFalse[0m [0;32mand[0m [0mimg[0m [0;32mis[0m [0;32mnot[0m [0;32mNone[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 173[0;31m         [0mimg[0m [0;34m=[0m [0m_utils[0m[0;34m.[0m[0mcheck_niimg_3d[0m[0;34m([0m[0mimg[0m[0;34m,[0m [0mdtype[0m[0;34m=[0m[0;34m'auto'[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    174[0m         [0mdata[0m [0;34m=[0m [0m_safe_get_data[0m[0;34m([0m[0mimg[0m[0;34m,[0m [0mensure_finite[0m[0;34m=[0m[0;32mTrue[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    175[0m         [0maffine[0m [0;34m=[0m [0mimg[0m[0;34m.[0m[0maffine[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/env/psy3018/lib/python3.8/site-packages/nilearn/_utils/niimg_conversions.py[0m in [0;36mcheck_niimg_3d[0;34m(niimg, dtype)[0m
[1;32m    336[0m [0;34m[0m[0m
[1;32m    337[0m     """
[0;32m--> 338[0;31m     [0;32mreturn[0m [0mcheck_niimg[0m[0;34m([0m[0mniimg[0m[0;34m,[0m [0mensure_ndim[0m[0;34m=[0m[0;36m3[0m[0;34m,[0m [0mdtype[0m[0;34m=[0m[0mdtype[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    339[0m [0;34m[0m[0m
[1;32m    340[0m [0;34m[0m[0m

[0;32m~/env/psy3018/lib/python3.8/site-packages/nilearn/_utils/niimg_conversions.py[0m in [0;36mcheck_niimg[0;34m(niimg, ensure_ndim, atleast_4d, dtype, return_iterator, wildcards)[0m
[1;32m    278[0m             return _iter_check_niimg(niimg, ensure_ndim=ensure_ndim,
[1;32m    279[0m                                      dtype=dtype)
[0;32m--> 280[0;31m         [0;32mreturn[0m [0mconcat_niimgs[0m[0;34m([0m[0mniimg[0m[0;34m,[0m [0mensure_ndim[0m[0;34m=[0m[0mensure_ndim[0m[0;34m,[0m [0mdtype[0m[0;34m=[0m[0mdtype[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    281[0m [0;34m[0m[0m
[1;32m    282[0m     [0;31m# Otherwise, it should be a filename or a SpatialImage, we load it[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/env/psy3018/lib/python3.8/site-packages/nilearn/_utils/niimg_conversions.py[0m in [0;36mconcat_niimgs[0;34m(niimgs, dtype, ensure_ndim, memory, memory_level, auto_resample, verbose)[0m
[1;32m    448[0m     [0miterator[0m[0;34m,[0m [0mliterator[0m [0;34m=[0m [0mitertools[0m[0;34m.[0m[0mtee[0m[0;34m([0m[0miter[0m[0;34m([0m[0mniimgs[0m[0;34m)[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    449[0m     [0;32mtry[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 450[0;31m         [0mfirst_niimg[0m [0;34m=[0m [0mcheck_niimg[0m[0;34m([0m[0mnext[0m[0;34m([0m[0mliterator[0m[0;34m)[0m[0;34m,[0m [0mensure_ndim[0m[0;34m=[0m[0mndim[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    451[0m     [0;32mexcept[0m [0mStopIteration[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    452[0m         [0;32mraise[0m [0mTypeError[0m[0;34m([0m[0;34m'Cannot concatenate empty objects'[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/env/psy3018/lib/python3.8/site-packages/nilearn/_utils/niimg_conversions.py[0m in [0;36mcheck_niimg[0;34m(niimg, ensure_ndim, atleast_4d, dtype, return_iterator, wildcards)[0m
[1;32m    269[0m                 [0;32mraise[0m [0mValueError[0m[0;34m([0m[0mmessage[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    270[0m             [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 271[0;31m                 [0;32mraise[0m [0mValueError[0m[0;34m([0m[0;34m"File not found: '%s'"[0m [0;34m%[0m [0mniimg[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    272[0m         [0;32melif[0m [0;32mnot[0m [0mos[0m[0;34m.[0m[0mpath[0m[0;34m.[0m[0mexists[0m[0;34m([0m[0mniimg[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    273[0m             [0;32mraise[0m [0mValueError[0m[0;34m([0m[0;34m"File not found: '%s'"[0m [0;34m%[0m [0mniimg[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;31mValueError[0m: File not found: 'maps'
ValueError: File not found: 'maps'

